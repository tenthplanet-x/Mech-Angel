extern void this_process_handle_MGPT_ACTIVITY_COMMON_OP_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_ALLIANCE_ENTER_CROSS_MAP_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_ALLIANCE_SERVER_LIST_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_ALLIANCE_UNIT_INFO_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_AS_PROMOTEE_OPERATION_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CHALLENG_RANK_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_COMMON_STAT_BASIC_OPERATION_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_COMMON_STAT_OPERATION_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CROSSREALM_ADD2TEAM_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CROSSREALM_AUTOADD_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CROSSREALM_CREATETEAM_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CROSSREALM_ENTER_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CROSSREALM_INVITEPLAYER_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CROSSREALM_KICKMEMBER_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CROSSREALM_LEAVETEAM_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CROSSREALM_MAPLIST_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CROSSREALM_PLAYER_TEAMINFO_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CROSSREALM_READYMEMBER_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CROSSREALM_REFUSE_INVITE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CROSSREALM_TEAMDETAIL_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CROSSREALM_TEAMINFOEDIT_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CROSSREALM_TEAMLIST_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CROSSREALM_TEAM_INFO_NOTIFY_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_CROSSREALM_TEAM_OPERATION_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CROSSREALM_TEAM_OPERATION_RESP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_CS_ADD_BUDDY_CHAIN_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_AccpetEntrustTask_Req_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_BATTLEFEILD_REPORT_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_BATTLE_LOG_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_BIND_BUDDY_INSTANCE_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_BOT_ACTIVATE_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_BOT_REWARD_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_BOT_UPGRADE_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_BUDDY_BUDDY_STAR_UPGRADE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_BUDDY_MANUAL_LEVEL_UP_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_BUY_BUDDY_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_DEL_BUDDY_CHAIN_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_EquipAdvance_Req_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_EquipCommand_Req_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_FIRE_TIMER_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_GUILD_RANK_CHALLENGE_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_GetAwardEntrustTask_Req_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_GetSkyArena_BattleInfo_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_GetSkyArena_GradeAwardInfo_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_GetSkyArena_GradeAward_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_IntensifyCommandEquip_Req_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_Lottery_Draw_Req_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_Lottery_ExtraReward_Req_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_NEWVIP_REWARD_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_PET_DECOMPOSE_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_PET_DISABLE_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_PET_ENABLE_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_PET_STAR_UPGRADE_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_RELIVE_BUDDY_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_RefineCommandEquip_Req_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_SET_ACTIVATE_BUDDY_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_SKYARENA_CHECKBATTLESTAGE_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_SUMMITARENA_MY_HONORTOPID_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_SUMMIT_ARENA_AGAINSTLIST_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_SUMMIT_ARENA_ENTRYLIST_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_SUMMIT_ARENA_GROUPSTAGE_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_SUMMIT_ARENA_HONOR_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_SUMMIT_ARENA_INFO_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_SUMMIT_ARENA_MY_INFO_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_SWITCH_BUDDY_CHAIN_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_SoulCommandEquip_Req_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_SpeedUpEntrustTask_Req_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_ThemeAutoExchange_Req_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_ThemeFlagChange_Req_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_UNBIND_BUDDY_INSTANCE_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_CS_UpdateEntrustTask_Req_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_FALLIANCE_BOSS_INFO_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_FALLIANCE_GUILD_WIN_INFO_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_FINISH_EXECUTE_SKILL_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_G2G_GUILD_LADDER_ENTER_REQ_SERVER_TYPE_GAME(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GAME
extern void this_process_handle_MGPT_G2G_GUILD_LADDER_ENTER_RSP_SERVER_TYPE_GAME(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GAME
extern void this_process_handle_MGPT_G2G_GUILD_LADDER_LEAVE_SERVER_TYPE_GAME(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GAME
extern void this_process_handle_MGPT_G2G_REQ_ENTERARENA_SERVER_TYPE_GAME(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GAME
extern void this_process_handle_MGPT_G2G_REQ_LEAVEARENA_SERVER_TYPE_GAME(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GAME
extern void this_process_handle_MGPT_G2G_RLT_ENTERARENA_SERVER_TYPE_GAME(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GAME
extern void this_process_handle_MGPT_G2G_RLT_LEAVEARENA_SERVER_TYPE_GAME(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GAME
extern void this_process_handle_MGPT_G2G_SYN_ARENASTATUS_SERVER_TYPE_GAME(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GAME
extern void this_process_handle_MGPT_G2G_SYN_MATCHARENA_SERVER_TYPE_GAME(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GAME
extern void this_process_handle_MGPT_G2G_UPDATE_RESTARTREWARDPLAYERID_SERVER_TYPE_IM(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_IM
extern void this_process_handle_MGPT_GAMESTORY_ENTER_CROSS_MAP_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_GAMESTORY_FACTION_DEFENDER_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_GAMESTORY_KEY_ECOUNTED_STAT_REQ_EX_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_GAMESTORY_KEY_ECOUNTED_STAT_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_GAMESTORY_OPERATION_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_GAMESTORY_RELATE_TIME_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_GAME_COM_GM_TRANS_MSG_SERVER_TYPE_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_GAME_COM_GM_TRANS_MSG_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_GAME_COM_GM_TRANS_MSG_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_GAME_COM_GM_TRANS_MSG_SERVER_TYPE_MAIL_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_GAME_COM_GM_TRANS_MSG_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_GAME_COM_GM_TRANS_MSG_SERVER_TYPE_TRADE(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_GAME_NOTICE_MSG_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GAW_REQ_SHOP_TRANSFERITEM_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_GC_REQ_JUMPER_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_GC_REQ_LEAVE_GAME_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_GC_REQ_LOGIN_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_GC_REQ_RESET_GAME_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_GC_RUMOR_MESSAGE_SERVER_TYPE_IM(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_IM
extern void this_process_handle_MGPT_GD_LOAD_CHAR_PB_BASE_SERVER_TYPE_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_DB
extern void this_process_handle_MGPT_GD_LOAD_CHAR_PB_Development_SERVER_TYPE_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_DB
extern void this_process_handle_MGPT_GD_LOAD_CHAR_PB_FULL_SERVER_TYPE_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_DB
extern void this_process_handle_MGPT_GD_LOAD_CHAR_PB_Hero_SERVER_TYPE_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_DB
extern void this_process_handle_MGPT_GD_LOAD_CHAR_PB_LITE_SERVER_TYPE_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_DB
extern void this_process_handle_MGPT_GD_LOAD_CHAR_PB_Offline_SERVER_TYPE_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_DB
extern void this_process_handle_MGPT_GD_LOAD_CHAR_PB_Pack_SERVER_TYPE_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_DB
extern void this_process_handle_MGPT_GD_LOAD_CHAR_PB_PlayerBase_SERVER_TYPE_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_DB
extern void this_process_handle_MGPT_GD_RES_ALL_CHAR_INFO_SERVER_TYPE_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_DB
extern void this_process_handle_MGPT_GD_RLT_CHANGE_CHAR_NAME_SERVER_TYPE_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_DB
extern void this_process_handle_MGPT_GD_SAVE_CHAR_PB_RESULT_SERVER_TYPE_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_DB
extern void this_process_handle_MGPT_GET_GAMESTORYBATCH_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_GET_MAPNPCINFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_GF_REQUEST_NOTIFY_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GF_RESP_FRIENDDETAIL_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GF_RLT_GET_BLACKLIST_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GF_RLT_GET_ENEMY_LIST_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GF_RLT_GET_FRIEND_LIST_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GF_RLT_SET_RELATION_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GF_RLT_USER_ONLINE_INFO_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_APPOINTENTER_RAID_REQ_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_CREATE_RAID_RESP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_CREATE_TRANSPORT_RESP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_CROSSREALM_GUILDWAR_END_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_CROSSREALM_GUILDWAR_GUILDENTER_RESP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_CROSSREALM_GUILDWAR_NOTICE_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_CROSSREALM_GUILDWAR_PLACEENTER_REQ_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_CROSSREALM_GUILDWAR_POWER_NOTIFY_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_CROSSREALM_GUILDWAR_START_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_CROSSREALM_GUILD_WARPLACE_END_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_CROSSREALM_GUILD_WARPLACE_START_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_CROSSREALM_POWERGUILD_NOTIFY_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_CROSSREALM_WARTIME_NOTIFY_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_DESTROY_RAID_GAME_NOTIFY_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_ENTERAPPOINT_TRANSPORT_REQ_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_ENTER_RAID_RESP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_ENTER_TRANSPORT_RESP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_GET_RAIDSERVERLIST_RESP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_NOTIFY_ADD2GUILD_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_NOTIFY_ADD_APPLY_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_NOTIFY_ADD_MEMBER_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_NOTIFY_AUTOADD_CHANGE_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_NOTIFY_BASEINFO_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_NOTIFY_CLEAR_APPLY_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_NOTIFY_DEL_APPLY_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_NOTIFY_DEL_MEMBER_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_NOTIFY_DISMISS_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_NOTIFY_DOMAININFO_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_NOTIFY_MODIFY_BUFFID_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_NOTIFY_ONLINE_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_NOTIFY_POSITION_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_NOTIFY_POWERGUILD_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_NOTIFY_UPDATE_GUILDRAID_INFO_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_NOTIFY_UPDATE_MEMBER_INFO_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_POWERGUILD_REWARD_RESP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_PREPARE_RAID_REQ_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_REQ_POWERGUILD_REWARD_TIME_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_GGU_RLT_ACTACTIVEREWARDINFO_B_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_RLT_ACTACTIVEREWARDINFO_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_RLT_AUTOADD_CHANGE_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_RLT_CREATE_GUILD_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_RLT_DISMISS_GUILD_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_RLT_DONATE_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_RLT_EXIT_GUILD_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_RLT_FASTJOIN_GUILD_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_RLT_GETLIMITREWARD_B_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_RLT_GETLIMITREWARD_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_RLT_GUILDLIST_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_RLT_GUILDRANK_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_RLT_GUILD_APPLYINFO_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_RLT_GUILD_APPOINT_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_RLT_GUILD_ASSET_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_RLT_GUILD_CLEAR_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_RLT_GUILD_CONFIRM_JOIN_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_RLT_GUILD_KICKMEMBER_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_RLT_GUILD_MEMBER_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_RLT_HANDLE_ASSERT_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_RLT_JOIN_GUILD_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_RLT_MODITY_GUILD_DECLARATION_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_RLT_POWERGUILD_APPOINT_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_RLT_POWERGUILD_REWARD_CHECK_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_RLT_POWERGUILD_REWARD_TIME_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_RLT_PRECREATE_GUILD_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_RLT_RANDOM_GUILD_NAME_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_RLT_UPGRADE_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_TRANSPORT_DESTORYNOTIFY_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GGU_TRANSPORT_NOTIFY_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GG_ADDGUILDPRESENTINFO_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GG_DELETEGUILDPRESENTINFO_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GG_NOTICEMODIFYPRESENTID_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GG_NOTIFYGUILDMAPBOSSINFO_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GG_NOTIFY_ArenaTimeData_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_GG_NOTIFY_GUILDPRESENTINFO_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GG_PLAYERGUILDSCORE_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GG_REQ_CHALLENGGIFTSTATE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_GG_RESP_GETBUDDYRANKINDEX_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_GG_RESP_GETRANK_BUDDY_INFO_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_GG_RESP_GETRANK_PET_INFO_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_GG_RESP_GETRANK_PLAYERBUDDY_INFO_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_GG_RESP_GETRANK_SUB_INFO_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_GG_RESP_GUILD_FIGHT_PLAYER_INFO_SERVER_TYPE_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_DB
extern void this_process_handle_MGPT_GG_RESP_RANK_TOPN_PLAYER_INFO_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_GG_RLT_ADDGUILDBOSSINFO_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GG_RLT_GUILD_FIGHT_SETTLE_SERVER_TYPE_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_DB
extern void this_process_handle_MGPT_GG_RLT_GUILD_SCORE_NOTIFY_GS_SERVER_TYPE_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_DB
extern void this_process_handle_MGPT_GG_RLT_OFFLINE_PLAYER_FROM_DB_SERVER_TYPE_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_DB
extern void this_process_handle_MGPT_GG_RLT_TIMER_ADD_SCORE_SERVER_TYPE_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_DB
extern void this_process_handle_MGPT_GG_RespGetSkyArena_GradeAward_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_GG_RespSkyArena_BattleInfo_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_GG_RespSkyArena_GradeAwardInfo_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_GG_SENDGUILDMEMBERSTATE_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GG_SENDGUILDPRESENTSTATE_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GG_SYNCNEWOPENGUILDMAPBOSS_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GG_SkyArena_ChallengeResult_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_GG_UPDATEGUILDCRYSTALINFO_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GG_UPDATEGUILDMAPBOSSINFO_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GG_UPDATEGUILDMAPFINISHMAP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GL_REQ_BROADCAST_MESSAGE_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_GL_REQ_CREATE_CHAR_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_GL_REQ_UPDATE_ACCOUNT_DETAIL_INFO_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_GL_RESP_ALLSERVER_CONNECTTIME_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_GL_RESP_CLOSESERVER_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_GL_RESP_EXPORTROBOT_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_GL_RESP_PLAYER_DETAIL_SERVER_TYPE_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_DB
extern void this_process_handle_MGPT_GL_RLT_CHAR_PROPELL_INFO_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_GL_RLT_GET_ACCOUNT_DETAIL_INFO_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_GL_SERVER_INIT_RTL_GlOBAL_SERVER_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_GL_SERVER_INIT_RTL_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_GL_SERVER_INIT_RTL_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_GL_SERVER_INIT_RTL_SET_ENTRY_ID_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_GL_SYNC_CASH_OP_RESP_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_GL_SYNC_FREEZE_PLAYER_RESP_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_GL_SYNC_JSON_SAVE2REDIS_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_GMTOOL2_MUTE_USER_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_GMTOOL2_PAY_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_GMTOOL2_REPORT_ONLINE_COUNT_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_GMTOOL2_SEND_MAIL_ALL_CHAR_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_GMTOOL2_SEND_MAIL_ONLINE_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_GMTOOL2_SEND_MAIL_USER_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_GMTOOL2_SET_GMLEVEL_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_GM_RLT_DELETE_MAIL_SERVER_TYPE_MAIL_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_MAIL_DB
extern void this_process_handle_MGPT_GM_RLT_LOAD_CHAR_MAIL_INFO_SERVER_TYPE_MAIL_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_MAIL_DB
extern void this_process_handle_MGPT_GM_RLT_MAIL_PAYPRICE_SERVER_TYPE_MAIL_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_MAIL_DB
extern void this_process_handle_MGPT_GM_RLT_NEW_MAIL_SERVER_TYPE_MAIL_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_MAIL_DB
extern void this_process_handle_MGPT_GM_RLT_OPEN_MAIL_SERVER_TYPE_MAIL_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_MAIL_DB
extern void this_process_handle_MGPT_GM_RLT_PAYMAIL_MODIFY_STATUS_SERVER_TYPE_MAIL_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_MAIL_DB
extern void this_process_handle_MGPT_GM_RLT_POST_MAIL_SERVER_TYPE_MAIL_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_MAIL_DB
extern void this_process_handle_MGPT_GM_RLT_RETURN_MAIL_SERVER_TYPE_MAIL_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_MAIL_DB
extern void this_process_handle_MGPT_GM_RLT_TAKE_MAIL_ITEM_SERVER_TYPE_MAIL_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_MAIL_DB
extern void this_process_handle_MGPT_GM_RLT_TAKE_MAIL_MONEY_SERVER_TYPE_MAIL_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_MAIL_DB
extern void this_process_handle_MGPT_GP_RLT_ROLE_PROFILE_INFO_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_GREAT_KUNGFU_OPERATION_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_GUILD_WAR_MARKCHG_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_INVITE_ALLPLAYER_CROSSREALMTEAM_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_MY_PROMOTEES_INFO_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_MY_PROMOTEE_OPERATION_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_MY_PROMOTEE_OPERATION_RESP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_NOTIFY_COMBO_COUNT_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_NOTIFY_GG_SENDGUESSMAIL_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_NOTIFY_GG_SUMMITDATA_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_NOTIFY_MSG_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_NOTIFY_SERVER_ALREADY_IN_CENTER_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_NOTIFY_SERVER_ALREADY_IN_GAME_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_PROMOTER_OPERATION_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_QUERY_GUILD_RAID_INFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_RANK_QUERY_BASEINFO_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ACCEPT_TASK_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ACHIEVEMENTPOINT_REWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ACHIEVEMENT_REWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ACTIVATE_STARVEIN_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ACTIVITYGUILDBOSSMAP_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ACTOR_INFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ADDESCORTREWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ADDFORBIDPLAYER_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ADDFORCE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ADDHEALTH_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ADDHOOKTIME_ITEM_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ADDID_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ADDINVESTMENTCARDREWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ADDITEM_MAIL_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ADDNOVICETUTORIAL_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ADDREWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ADDTIME_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ADD_BLACKLIST_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ADD_CHALLENGE_TIME_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ADD_ENEMY_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ADD_FRIENDNICK_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ADD_FRIEND_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ADD_GUILDGOOD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ADD_ITEM_AUCTIONSELL_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ADD_RECOMMEND_FRIEND_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ADD_SYSTEM_TITLE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ANSWERRANKINFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_APPLY_GUILD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_APPOINTMENT_CHEIF_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ARENA_OPERTAION_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_AUCTION_BUY_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_AUCTION_CANCEL_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_AUCTION_GETAWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_AUCTION_LIST_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_AUCTION_SEARCH_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_AUCTION_SELL_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_AUTOADD_CHANGE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_BAILIAN_AWARDBUFF_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_BAILIAN_CONVEY1_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_BAILIAN_CONVEY2_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_BATTLE_INFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_BEADDFRIEND_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_BILLBOARD_TASK_INFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_BONFIREPARTY_BUYLEFTITEMTIMES_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_BONFIREPARTY_BUYLEFTITEM_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_BUDDYTRANSFORMOP_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_BULLET_CHANGE_TARGET_LOCATION_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_BULLET_EXPLOSIVE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_BULLET_PENETRATE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_BULLET_SHOT_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_BUYINVESMENTCARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_BUYNONPAREILITEM_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_BUYRARESUBDEVAEYETRANSFORM_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_BUY_ITEM_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_BUY_TIMES_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_BUY_VIGOR_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CALLBOSS_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CANCEL_TASK_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CHANGEELEMENT_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CHANGE_CHAR_NAME_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CHANGE_FRIENDGROUP_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CHANGE_SOCIETY_INFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CHAR_PROFILE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CHAT_REQUEST_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CHECK_PKEVENT_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CHEIF_FORBID_JOIN_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CHEST_PICKUP_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CLEAR_CHALLENGE_CD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CLEAR_GUILD_APPLYLIST_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CLEAR_PK_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CLOSESETTLEWINDOW_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_COLLECT_ITEM_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_COLLECT_PLAYER_EQUIP_SUIT_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_COMMITANSWER_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CONFIRM_APPLY_GUILD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CONFIRM_SHARE_TASK_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CONTROLLER_AND_CORE_COMBAT_SCORE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CREATE_GROUP_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CREATE_GUILD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CURRENCY_COMMISSION_BUY_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CURRENCY_COMMISSION_ITEM_LIST_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CURRENCY_COMMISSION_SELL_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CURRENCY_QUICK_BUY_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CURRENCY_QUICK_SELL_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CURRENCY_QUICK_TRADE_LIST_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CURRENCY_REVOKE_COMMISSION_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CURRENCY_TRADE_RECORD_LIST_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CURRENCY_YUANBAO_DEPOSIT_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_CURRENCY_YUANBAO_DRAW_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_DAILY_AWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_DAMAGERANKINFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_DEACTIVE_SKILL_STATE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_DEBUG_ACTOR_AI_INFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_DEBUG_COMMANDLINE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_DECOMPOSITION_ITEM_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_DECOMPOSITION_SETTING_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_DELETE_MAIL_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_DELITEM_MAIL_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_DEL_BLACKLIST_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_DEL_ENEMY_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_DEL_FRIEND_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_DEL_ITEM_AUCTIONSELL_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_DESTROY_ITEM_IN_PACKAGE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_DIGTREASURE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_DISMISS_GROUP_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_DISMISS_GUILD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_DOMAINREWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_DONATE_GUILD_MATERIALS_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_DRAW_FDEPOSIT_REWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_DRAW_LIVENESS_REWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_DRAW_VIP_ONEOFF_GIFT_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_DRAW_VIP_TIME_GIFT_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_DUELINVITE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_EIGHTEEN_BRONZEMAN_BEGINCHALLENGE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_EIGHTEEN_BRONZEMAN_TEACHTASK_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_END_SOLODULE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_EQUIPSLOT_STAR_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_EQUIPSUBITEM_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_EQUIP_RUNE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_EQUIP_SLOT_LV_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_EXECUTE_ACTOR_OPERATION_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_EXIT_GROUP_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_EXIT_GUILD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_EXPAND_WAREHOUSE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_EXTERN_BASICBAG_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_FASTAPPLYGUILD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_FIGHTRECORD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_FINISH_TASK_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_FORBID_GUILD_APPLY_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_FORGETPRODUCTION_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_FRIEND_RECOMMEND_FRIEND_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GAIN_OFFLINE_EXP_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETBEDEFIGHTEDFLAG_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETBESTGUILDREWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETBUDDYRANKINDEX_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETCASHAFFIX_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETCASH_FROM_WAREHOUSE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETCHAPTERRAIDSTARREWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETFIRSTCHARGEREWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETFRIENDNICK_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETFRIEND_DETAIL_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETGAMERESTARTREWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETGUILDCRYSTALREWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETGUILDDAMAGERANKINFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETGUILDDAMAGERANK_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETGUILDMAPBOSSRANK_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETGUILDPRESENTREWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETITEMAFFIX_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETNEARBYPLAYERINFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETNEWACHIEVEMENTREWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETNONPAREILRETURN_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETNOVICETUTORIALREWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETPETISLANDSSTAGEREWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETPLAYERSCHEMEDATA_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETRANKSUBBINFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETRANKTYPEINFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETRANKYIZHONGQINXI_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETRANK_BUDDY_INFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETRANK_PET_INFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETRANK_PLAYERBUDDY_INFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETRANK_SUB_INFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETREGULARBOSSKILLERINFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETRESOURCERETRIEVERREWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETROTARYTABLEREWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETSEVENDAYREWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETSINGLEDAMAGEREWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETSPECIALTRAININGREWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETSUBBVALUE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETSUMMITSINGLEDATA_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETSUMMITSUPPORTINFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETSUMMITWINER_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETTASKEXTRAREWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETTREASUREPOS_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETVIPEXTRAREWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETYIJITUXISTAGEREWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GETYIJIXUNBAOSTAGEREWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GET_BUY_TIMES_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GET_CHALLENGE_CD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GET_FRIEND_STATUS_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GET_HOOKING_GUIDE_LOCATION_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GET_OFFLINE_EXP_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GET_PK_VALUE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GET_PLAYER_NEARBY_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GET_SHOPITEM_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GET_STARVEIN_REWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GET_USER_ONLINE_INFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GLOBALGUILDWARREWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GLOBALGUILDWAR_ENTER_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GUILDFIGHTRANKINFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GUILDMAPBOSSEND_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GUILDRAIDENTER_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GUILDRAIDREWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GUILDTRANSPORT_CREATE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GUILDTRANSPORT_ENTER_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GUILDWAR_CATAPULT_FIRE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GUILDWAR_ENTER_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GUILD_APPOINT_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GUILD_ASSET_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GUILD_FIGHT_GUILD_MEMBER_ID_INFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GUILD_FIGHT_PLAYER_INFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GUILD_FIGHT_ROB_SCORE_RECEIVE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GUILD_FIGHT_ROB_SCORE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GUILD_FIGHT_TOWER_INFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GUILD_ITEM_PACK_OPT_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GUILD_KICKMEMBER_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GUILD_LADDER_BASE_INFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GUILD_LADDER_ENTER_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GUILD_LADDER_LEAVE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GUILD_LADDER_RANK_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GUILD_LADDER_RECORDS_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GUILD_LADDER_SIGNUP_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GUILD_LEADER_AUTOCHG_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_REQ_GUILD_LOG_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GUILD_REWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GUILD_WAR_MARK_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_GUILD_WAR_REFRESH_TIME_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_REQ_HIDDENWEAPON_BEGINCHALLENGE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_HIDDENWEAPON_TEACHTASK_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_HOOKUIITEM_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_HOOK_INFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_IDENTIFY_ITEM_IN_PACKAGE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_INVITE_TO_GROUP_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_INVITE_TO_GUILD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_IN_GAME_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ITEMDECOMPOSIT_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ITEMENHANCE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ITEM_ADD_ITEM_IN_TRADE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ITEM_REMOVE_ITEM_IN_TRADE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ITEM_REPLY_TRADE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ITEM_REQUEST_TRADE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ITEM_TRADE_FINISH_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ITEM_TRADE_INTERRUPT_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ITEM_TRADE_LOCK_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ITEM_TRADE_UNLOCK_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ITEM_UPDATE_CASH_IN_TRADE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_JOIN_GROUP_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_KICK_PLAYER_FROM_GROUP_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_KILLBOSSREWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_LEARNCONTROLLERSKILL_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_LEARNPRODUCTION_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_LEAVEARENA_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_LEVEL_UP_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_MAILASSET_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_MAINTASKREACHREWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_MEMBERAUTOADD_CHANGE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_MERGE_ITEM_IN_PACKAGE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_MIDAUTUNMDAY_GET_ITEM_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_MODIFY_GUILD_DECLARATION_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_MODIFY_PK_SETTING_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_MODIFY_QUALITY_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_NETPLAYER_ATTRIBUTE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_NOTICE_TASK_EVENT_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_NPCSHOP_BUY_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_NPC_IN_FOV_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_NPC_OWNERSHIP_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_NPC_UPGRADE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ONEKEY_EQUIP_RUNE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ONEKEY_UNEQUIP_RUNE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_OPEN_ABILITY_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_PACK_SPLIT_ITEM_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_PACK_SWITCH_ITEM_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_PAIR_SITRECOVER_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_PAYFORMAIL_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_PLAYERRAIDSETTLE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_PLAYER_DELTADATA_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_PLAYER_DETAIL_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_PLAYER_EXECUTE_SKILL_TYPE_DIR_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_PLAYER_EXECUTE_SKILL_TYPE_LOCATION_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_PLAYER_EXECUTE_SKILL_TYPE_TARGET_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_PLAYER_INTERRUPT_SKILL_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_PLAYER_IN_FOV_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_PLAYER_JUMP_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_PLAYER_PK_INFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_POWERGUILD_APPOINT_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_POWERGUILD_REWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_PROMOTE_TASK_REWARD_STAR_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_QUICKRAID_NEW_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_QUIT_TRANSCRIPTION_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_RANK_CHALLENGE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_RANK_INFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_RANK_QUERY_CHALLENGE_INFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_RANK_TOPN_PLAYER_INFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_READMAIL_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_REALTIMECOMBATRECORDER_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_RECEIVE_DAILY_ACTIVITY_REWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_RECEIVE_DAILY_REWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_RECORD_TRANSPORT_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_RECRUIT_GUILD_MEMBER_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_RECV_LUCK_AWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_REDUCE_TASK_DIFF_STAR_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_REFRESHREWARDTASK_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_REINFORCE_EQUIPSLOT_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_REMOVEFORBIDPLAYER_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_REMOVE_SYSTEM_TITLE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_REPLY_CAPTCHA_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_RESET_ACTOR_OPERATION_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_RESET_RUNE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_RESIGNIN_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_RESPAWN_ON_CURRENT_LOCATION_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_RESPAWN_ON_SAFE_LOCATION_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_RETURNTOOUT_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_RETURN_TO_CITY_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ROBOT_ENTER_MAP_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_ROBOT_RESET_TASK_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_RUNE_REWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_RUNE_STAR_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_RUNE_UPGRADE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SAFE_SYSTEM_CANCEL_RESET_SECOND_PASSWORD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SAFE_SYSTEM_CHANGE_SECOND_PASSWORD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SAFE_SYSTEM_DELAY_SET_SECOND_PASSWORD_TIME_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SAFE_SYSTEM_RESET_SECOND_PASSWORD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SAFE_SYSTEM_SET_SAFE_LOCK_TIME_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SAFE_SYSTEM_SET_SECOND_PASSWORD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SAFE_SYTEM_TRY_SECOND_PASSWORD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SAVECASH_TO_WAREHOUSE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SAVE_SHORTCUT_KEY_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SEARCH_GUILD_RANK_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SEARCH_GUILD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SEARCH_PLAYER_ADVANCED_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SEARCH_PLAYER_BASIC_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SEEKTREASURE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SELECT_TARGET_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SETAI_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SETAUTODECOMPOSITIONITEM_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SETBUDDYACTIVATESCHEME_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SETCHAINFLAG_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SETCOMMANDERTITLEFLAG_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SETCURRENTCOMMANDERTITLEID_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SETEQUIPSUITLEVEL_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SETHUANJINGINVAILD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SETMAPBOSSFLAG_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SETPROFILEPICTUREFLAG_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SETPROFILEPICTURE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SETRANKTRANSFERSTATE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SETREDPOINTFLAG_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SETROTARYTABLESKIPANIMATION_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SETSPECIALMAP_INITBUDDYACTIVATESCHEME_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SETSUMMITGUESSINFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SET_ACTOR_OPERATION_PARAMETER_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SET_ASSIST_INFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SET_ATVCHARGE_REDPOINT_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SET_TITLE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SET_TRANSFER_POS_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SET_TUTORIAL_DATA_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SHARE_TASK_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SHORTCUT_EQUIP_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SHORTCUT_EXCHANGE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SHORTCUT_PACKAGE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SHORTCUT_REMOVE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SHORTCUT_SKILL_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SHORTCUT_VEHICLE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SHOT_ACTIVITY_INFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SHOT_ACTIVITY_RANK_INDEX_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SHOT_ACTIVITY_RANK_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SHOW_FASHION_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SIGNINREWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SIGNIN_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SIGNUPARENA_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SKILL_BOOK_UPGRADE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SKILL_UPDATE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SOCIETY_DELTADATA_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SUBEQUIPADVANCE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SUBEQUIPSLOTMOLDINGSPIRIT_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SUBORDINATE_OPERATION_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SUPPORT_FRIENDNICK_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SYNC_INVITE_GROUP_MEMBER_LIST_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SYNC_PING_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_SYNC_SUMMOR_POOL_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_TAKECHAPTERREWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_TALKTONPC_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_TASK_ASSIGN_ONE_KEY_OP_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_TASK_DRAW_ROUND_OFF_REWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_TASK_ONE_KEY_OP_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_TASK_PHAGOTROPHY_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_TIDY_ITEM_IN_PACKAGE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_TRANSCRIPTION_BEGIN_DIALOGUE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_TRANSCRIPTION_FINISH_DIALOGUE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_TRANSCRIPTION_PROGRESS_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_TRANSFERBATTLEPLAYBACKMAP_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_TRANSFER_DETAIL_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_TRANSFER_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_TRANSFER_TO_LOCATION_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_UNEQUIPSUBITEM_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_UNEQUIP_RUNE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_UNTREAD_MAIL_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_UPDATE_CHANNEL_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_UPGRADECOMMANDERTITLE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_UPGRADEPRODUCTION_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_UPGRADE_GUILD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_UPGRADE_SUBORDINATE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_USE_ACTIVATION_CODE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_USE_ACTIVATION_COUNT_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_USE_ITEM_IN_PACKAGE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_WRITE_MAIL_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_YIJITUXIRANKINFO_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_YIZHONGQINGXI_DAMAGEDATA_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_REQ_YIZHONGQINGXI_DETAILDAMAGEDATA_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_RESP_G2G_GETPLAYERSCHEMEDATA_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_RESP_G2G_GETRANKTYPEINFO_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_RESP_G2G_GETSUMMITSINGLEDATA_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_RESP_G2G_GETSUMMITSUPPORTINFO_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_RESP_G2G_GETSUMMITWINER_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_RESP_G2G_SETSUMMITGUESSINFO_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_RESP_TRANSFER_DETAIL_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_RLT_CONFIRM_BEADDFRIEND_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_RLT_CONFIRM_BEINVITE_TO_GROUP_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_RLT_CONFIRM_GROUP_JOIN_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_RLT_CONFIRM_INVITE_TO_GROUP_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_RLT_CONFIRM_INVITE_TO_GUILD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_RLT_DUELINVITE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_RLT_GUILD_LADDER_BASE_INFO_SERVER_TYPE_GLOBAL(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GLOBAL
extern void this_process_handle_MGPT_RLT_GUILD_LADDER_RANK_SERVER_TYPE_GLOBAL(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GLOBAL
extern void this_process_handle_MGPT_RLT_GUILD_LADDER_SIGNUP_SERVER_TYPE_GLOBAL(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GLOBAL
extern void this_process_handle_MGPT_RLT_GUILD_TRANS_DATA_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_RLT_GUILD_WAR_GIFT_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_RLT_GUILD_WAR_WINNERINFO_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_RLT_SIGNUPARENA_SERVER_TYPE_GLOBAL(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GLOBAL
extern void this_process_handle_MGPT_RLT_SKILL_RESPAWN_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_RLT_UPDATE_PLAYERSTATE_SERVER_TYPE_IM(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_IM
extern void this_process_handle_MGPT_S2G_CREATEGUILDBOSSMAP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SC_ChargeProfit_Reward_Req_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_SC_NOTIFY_GROUPARENA_NOTICE_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SEND_DAILY_CLEAN_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_SETGUILDPRESENTFLAG_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_SS_BATTLEFEILD_REPORT_RESP_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_BATTLE_LOG_RESP_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_CROSSREALM_ADD2TEAM_NOTIFY_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_CROSSREALM_ADD2TEAM_RESP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_CROSSREALM_AUTOADD_RESP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_CROSSREALM_BEKICK_NOTIFY_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_CROSSREALM_CREATETEAM_RESP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_CROSSREALM_ENTER_NOTIFY_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_CROSSREALM_ENTER_RESP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_CROSSREALM_FAST_NOTIFY_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_CROSSREALM_GAME_PLAYER_LEAVE_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_CROSSREALM_KICKMEMBER_RESP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_CROSSREALM_LEAVETEAM_NOTIFY_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_CROSSREALM_LEAVETEAM_RESP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_CROSSREALM_MAPLIST_RESP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_CROSSREALM_PLAYER_TEAMINFO_RESP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_CROSSREALM_PLAYINFOCHANGE_NOTIFY_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_CROSSREALM_READYMEMBER_RESP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_CROSSREALM_SERVER_USERENTER_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_CROSSREALM_TEAMDETAIL_RESP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_CROSSREALM_TEAMINFOCHANGE_NOTIFY_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_CROSSREALM_TEAMINFOEDIT_RESP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_CROSSREALM_TEAMLIST_RESP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_CROSSREALM_USER_ENTER_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_EXCLUDE_MAP_LIST_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_SS_FALLIANCE_BACK_SERVER_REQ_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_FALLIANCE_BACK_SERVER_RESP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_FALLIANCE_BOSS_RFINFO_RESP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_FALLIANCE_ENTER_CROSS_REQ_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_FALLIANCE_ENTER_CROSS_RESP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_FALLIANCE_ENTER_CROSS_SUCC_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_FALLIANCE_ENTER_CROSS_SYNC_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_FALLIANCE_GROUPINFO_RESP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_FALLIANCE_INFO_RESP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_GAME_NODE_TYPE_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_SS_GLOBAL_ARENA_ACHIEVE_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_SS_GLOBAL_ARENA_ACHIEVE_RESP_SERVER_TYPE_GLOBAL(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GLOBAL
extern void this_process_handle_MGPT_SS_GLOBAL_ARENA_INFO_SYNC_SERVER_TYPE_GLOBAL(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GLOBAL
extern void this_process_handle_MGPT_SS_GLOBAL_ARENA_LADDER_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_SS_GLOBAL_ARENA_LADDER_RESP_SERVER_TYPE_GLOBAL(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GLOBAL
extern void this_process_handle_MGPT_SS_GLOBAL_ARENA_PREPARE_REQ_SERVER_TYPE_GLOBAL(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GLOBAL
extern void this_process_handle_MGPT_SS_GLOBAL_ARENA_REGISTER_SERVER_REQ_SERVER_TYPE_GLOBAL(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GLOBAL
extern void this_process_handle_MGPT_SS_GLOBAL_ARENA_SETTLE_RESP_SERVER_TYPE_GLOBAL(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GLOBAL
extern void this_process_handle_MGPT_SS_GLOBAL_ARENA_START_REQ_SERVER_TYPE_GLOBAL(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GLOBAL
extern void this_process_handle_MGPT_SS_GLOBAL_GUILD_LADDER_REGISTER_SERVER_REQ_SERVER_TYPE_GLOBAL(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GLOBAL
extern void this_process_handle_MGPT_SS_GLOBAL_GUILD_LADDER_SETTLE_RESP_SERVER_TYPE_GLOBAL(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GLOBAL
extern void this_process_handle_MGPT_SS_KICK_PLAYER_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_SS_MAP_LINE_RESULT_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_SS_NOTICEBOSSFIRSTKILLINFO_GS_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_SS_NOTICEBOSSFIRSTKILLREWARDINFO_GS_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_SS_NOTICE_AUCTION_SERVER_TYPE_TRADE(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_TRADE
extern void this_process_handle_MGPT_SS_NOTICE_UPDATE_WATCHTOWER_INFO_GS_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_SS_NOTIFY_ACTIVATE_SUMMITARENA_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_NOTIFY_SUMMITARENA_AUTOSOLO_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_NOTIFY_SUMMITARENA_GROUPSTAGE_MAIL_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_NOTIFY_SUMMITARENA_GUESSCLOSE_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_NOTIFY_SUMMITARENA_HONORTIMES_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_NOTIFY_SUMMITARENA_MY_TOPSTAGEID_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_NOTIFY_SUMMIT_ARENA_BRISEUP_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_NOTIFY_SUMMIT_ARENA_HONORAWARD_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_NOTIFY_SUMMIT_ARENA_RANKINDEX_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_NOTIFY_SUMMIT_ARENA_REDPOINT_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_NOTIFY_SUMMIT_ARENA_TIME_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_NO_ROLE_DATA_SERVER_TYPE_DB(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_DB
extern void this_process_handle_MGPT_SS_NWEARENA_SYNCINTEGRAL_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_ONLINE_USER_ADD_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_SS_ONLINE_USER_ADD_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_ONLINE_USER_DEL_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_SS_ONLINE_USER_DEL_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_ONLINE_USER_SYNC_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_PROMOTE_PROMOTEE_LIST_RESP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_PROMOTE_PROMOTE_INFO_SYNC_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_PROMOTE_SET_AS_PROMOTEE_INFO_RESP_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_QUERY_CHALLENG_RANK_RESP_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_RANK_CHALLENGE_RESP_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_RANK_CHALLENGE_RESULT_RESP_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_RANK_DAILY_SETTLE_NOTIFY_ONCE_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_RANK_DAILY_SETTLE_NOTIFY_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_RANK_NOTIFY_BECHALLENGE_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_RANK_QUERY_BASEINFO_RESP_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_RANK_QUERY_BATTLE_RESP_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_RANK_QUERY_GAINGIFT_RESP_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_RANK_QUERY_GIFT_RESP_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_RANK_QUERY_RANK_RESP_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_RANK_QUERY_USER_CHALLENGE_RANK_RESP_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_REPETITION_GS_NODE_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_SS_RESP_EXPORTROBOT_NEW_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_RESP_GETBEDEFIGHTEDFLAG_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_RESP_GET_EXPORTROBOTFLAG_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_RESP_SENDMAILTOGUILD_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_RESP_SUMMITARENA_CHECKCHALLENGE_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_RLTGUILDDEFENDLOG_SERVER_TYPE_SOCIETY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_SOCIETY
extern void this_process_handle_MGPT_SS_RLT_AUCTION_BUY_SERVER_TYPE_TRADE(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_TRADE
extern void this_process_handle_MGPT_SS_RLT_AUCTION_CANCEL_SERVER_TYPE_TRADE(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_TRADE
extern void this_process_handle_MGPT_SS_RLT_AUCTION_GETAWARD_SERVER_TYPE_TRADE(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_TRADE
extern void this_process_handle_MGPT_SS_RLT_AUCTION_LIST_SERVER_TYPE_TRADE(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_TRADE
extern void this_process_handle_MGPT_SS_RLT_AUCTION_SELL_SERVER_TYPE_TRADE(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_TRADE
extern void this_process_handle_MGPT_SS_RLT_BUY_YUANBAO_SERVER_TYPE_TRADE(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_TRADE
extern void this_process_handle_MGPT_SS_RLT_DEPOSITMONEY_SERVER_TYPE_TRADE(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_TRADE
extern void this_process_handle_MGPT_SS_RLT_DEPOSITYUANBAO_SERVER_TYPE_TRADE(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_TRADE
extern void this_process_handle_MGPT_SS_RLT_DEPOSIT_MONEY_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_SS_RLT_DRAW_MONEY_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_SS_RLT_EXCHANGECANCEL_SERVER_TYPE_TRADE(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_TRADE
extern void this_process_handle_MGPT_SS_RLT_EXCHANGEHISTORY_SERVER_TYPE_TRADE(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_TRADE
extern void this_process_handle_MGPT_SS_RLT_EXCHANGELIST_SERVER_TYPE_TRADE(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_TRADE
extern void this_process_handle_MGPT_SS_RLT_EXCHANGEVIEWLIST_SERVER_TYPE_TRADE(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_TRADE
extern void this_process_handle_MGPT_SS_RLT_PRE_AUCTION_BUY_SERVER_TYPE_TRADE(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_TRADE
extern void this_process_handle_MGPT_SS_RLT_PRE_AUCTION_SELL_SERVER_TYPE_TRADE(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_TRADE
extern void this_process_handle_MGPT_SS_RLT_SELL_YUANBAO_SERVER_TYPE_TRADE(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_TRADE
extern void this_process_handle_MGPT_SS_RLT_TRANSFER_DIFMAP_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_SS_RLT_WITHDRAWMONEY_SERVER_TYPE_TRADE(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_TRADE
extern void this_process_handle_MGPT_SS_RLT_WITHDRAWYUANBAO_SERVER_TYPE_TRADE(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_TRADE
extern void this_process_handle_MGPT_SS_SKYARENA_AWARD_NOTIFY_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_SKYARENA_CHECKBATTLESTAGE_RESP_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_SUMMITARENA_MY_HONORTOPID_RESP_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_SUMMIT_ARENA_AGAINSTLIST_RESP_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_SUMMIT_ARENA_ENTRYLIST_RESP_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_SUMMIT_ARENA_GROUPSTAGE_RESP_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_SUMMIT_ARENA_HONOR_RESP_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_SUMMIT_ARENA_INFO_RESP_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_SUMMIT_ARENA_MY_INFO_RESP_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_SWITCH_MAP_PREPARE_PLAYER_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_SS_UPDATERANKLIST_SERVER_TYPE_GROUP(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GROUP
extern void this_process_handle_MGPT_SS_UPDATETESTDATA_GS_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_SS_UPDATE_ALLIANCE_BOSS_INFO_REQ_SERVER_TYPE_LOGIN(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_LOGIN
extern void this_process_handle_MGPT_SS_USER_DISCONNECT_SERVER_TYPE_GATEWAY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GATEWAY
extern void this_process_handle_MGPT_SS_USER_RELOGIN_GAME_SERVER_TYPE_GATEWAY(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_GATEWAY
extern void this_process_handle_MGPT_SYNC_CLIENT_SAMPLE_RECORD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_SYNC_EXECUTE_SKILL_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_SYNC_GAME_PLAYER_MOVE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_SYNC_HEART_BEAT_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_SYNC_UI_OPERATION_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MGPT_TREASURE_CHESTS_LOGS_REQ_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MG_REQ_ACTIVATE_SKILLBOOK_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MG_REQ_BIOGRAPHYPART_REWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MG_REQ_BUY_GROWTH_PACKAGE_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MG_REQ_COLLECTION_ACTIVATION_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MG_REQ_COLLECTION_REWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MG_REQ_GET_FD_DISCOUNT_REWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MG_REQ_GET_FD_FREE_REWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MG_REQ_GET_GROWTH_REWARD_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MG_REQ_RELIVE_BEFOREENTERMAP_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MG_REQ_RESET_SHOPTIMES_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MG_REQ_REWARD_TIME_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MG_REQ_SETSUBTRANSFORMFLAG_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MG_REQ_UNLOCK_SKILLBOOKSLOT_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MG_REQ_WEAR_SKILLBOOK_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
extern void this_process_handle_MQ_REQ_GET_SHOPRESETTIMES_SERVER_TYPE_CLIENT(Protocol::SS_MG_HEAD& rkMsgHead, NW_ServerSession * pkSession, GameLogic::LC_ActorBase* pkTarget, char* pMsgBody, uint16_t usBodySize);//SERVER_TYPE_CLIENT
